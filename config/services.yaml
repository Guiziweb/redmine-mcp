# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    # Tag all MCP tools
    App\Tools\:
        resource: '../src/Tools/'
        tags: ['mcp.tool']

    # Default time tracking provider (current user's provider)
    App\Domain\Provider\TimeTrackingProviderInterface:
        alias: App\Infrastructure\Provider\CurrentUserProviderService

    # User credential repository - Database storage (SQLite local, PostgreSQL prod)
    App\Infrastructure\Security\UserCredentialRepository:
        class: App\Infrastructure\Security\DoctrineUserCredentialRepository
        arguments:
            $em: '@doctrine.orm.entity_manager'
            $encryption: '@App\Infrastructure\Security\EncryptionService'

    # JWT token validator
    App\Infrastructure\Security\JwtTokenValidator:
        arguments:
            $jwtSecret: '%env(JWT_SECRET)%'

    # Google OAuth2 authentication service
    App\Infrastructure\Security\GoogleAuthService:
        arguments:
            $googleClientId: '%env(GOOGLE_CLIENT_ID)%'
            $googleClientSecret: '%env(GOOGLE_CLIENT_SECRET)%'
            $redirectUri: '%env(APP_URL)%/oauth/google-callback'

    # Encryption service for sensitive data
    App\Infrastructure\Security\EncryptionService:
        arguments:
            $encryptionKey: '%env(ENCRYPTION_KEY)%'

    # MCP Controller needs full container access for tool discovery
    App\Controller\McpController:
        arguments:
            $serviceContainer: '@service_container'
