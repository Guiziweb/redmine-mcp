# Example environment configuration
# Copy this file to .env.local and fill in your actual values

###> OAuth/JWT Configuration ###
# JWT secret for signing tokens (generate with: openssl rand -hex 32)
JWT_SECRET=your-jwt-secret-here

# Application base URL (used for OAuth callbacks)
# Development: Use ngrok URL (e.g., https://xxx.ngrok-free.dev)
# Production: Use your custom domain (e.g., https://mcp.yourcompany.com)
APP_URL=https://your-server.com

# Google OAuth2 credentials (get from Google Cloud Console)
# Create project at: https://console.cloud.google.com/apis/credentials
# Configure redirect URI: ${APP_URL}/oauth/google-callback
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Encryption key for Redmine credentials stored in database
# Generate with: php -r "echo base64_encode(random_bytes(SODIUM_CRYPTO_SECRETBOX_KEYBYTES)) . PHP_EOL;"
ENCRYPTION_KEY=your-base64-encoded-encryption-key

# Email access control (comma-separated)
# Allowed domains: All emails from these domains can access the application
ALLOWED_EMAIL_DOMAINS=yourcompany.com,example.org

# Allowed emails: Specific individual emails that can access the application
ALLOWED_EMAILS=alice@example.com,bob@example.com
###< OAuth/JWT Configuration ###

###> doctrine/doctrine-bundle ###
# Database connection
# Development: SQLite (default, no setup required)
DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"

# Production: PostgreSQL (recommended)
# DATABASE_URL="postgresql://user:password@localhost:5432/mcp_redmine?serverVersion=16&charset=utf8"
###< doctrine/doctrine-bundle ###